import streamlit as st
from transformers import AutoTokenizer, AutoModelForTokenClassification
from transformers import pipeline
import random

model_name = "dbmdz/bert-large-cased-finetuned-conll03-english"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForTokenClassification.from_pretrained(model_name)

ner=pipeline("ner",model=model, tokenizer=tokenizer, grouped_entities=True)
st.title("üí¨ –ê—Ç–∞—É—ã–Ω —Ç–∞–Ω—É (Named Entity Recognition)")
st.write("–ú”ô—Ç—ñ–Ω–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑ - –º–æ–¥–µ–ª—å –∞—Ç–∞—É–ª–∞—Ä–¥—ã (–∞–¥–∞–º, “±–π—ã–º, –æ—Ä—ã–Ω, —Ç.–±.) –∞–≤—Ç–æ–º–∞—Ç—Ç—ã —Ç“Ø—Ä–¥–µ —Ç–∞–Ω–∏–¥—ã.")
user_input=st.text_area("–ú”ô—Ç—ñ–Ω–¥—ñ –æ—Å—ã–Ω–¥–∞ –∂–∞–∑—ã“£—ã–∑:")
if st.button("–ê–Ω–∞–ª–∏–∑ –∂–∞—Å–∞—É"):
    if not user_input.strip():
        st.warning("–ú”ô—Ç—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑!")
    else:
        with st.spinner("–¢–∞–ª–¥–∞—É –∂“Ø—Ä—ñ–ø –∂–∞—Ç—ã—Ä..."):
            results=ner(user_input)

        highlighted_text = user_input
        for ent in results:
            word = ent['word'].replace("##", "")
            color = f"#{random.randint(0, 0xFFFFFF):06x}"
            highlighted_text = highlighted_text.replace(
                word,
                f"<span style='background-color:{color}; padding:4px; border-radius:4px'>{word} ({ent['entity_group']})</span>",
                1
            )

        st.subheader("üîç –ù”ô—Ç–∏–∂–µ:")
        st.markdown(highlighted_text, unsafe_allow_html=True)